var _styled_components$elm_styled$Internal$concatDeclaration = function (rule) {
	var _p0 = rule;
	if (_p0.ctor === 'Declaration') {
		var _p2 = _p0._1;
		var _p1 = _p0._0;
		return _p0._2 ? A2(
			_elm_lang$core$Basics_ops['++'],
			_p1,
			A2(
				_elm_lang$core$Basics_ops['++'],
				': ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(_elm_lang$core$String$join, ' ', _p2),
					' !important;'))) : A2(
			_elm_lang$core$Basics_ops['++'],
			_p1,
			A2(
				_elm_lang$core$Basics_ops['++'],
				': ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					A2(_elm_lang$core$String$join, ' ', _p2),
					';')));
	} else {
		return '';
	}
};
var _styled_components$elm_styled$Internal$createHash = F2(
	function (prefix, hashable) {
		return A2(
			_elm_lang$core$String$append,
			A2(_elm_lang$core$Basics_ops['++'], prefix, '-'),
			_elm_lang$core$Basics$toString(
				A2(
					_Skinney$murmur3$Murmur3$hashString,
					571130,
					_elm_lang$core$Basics$toString(hashable))));
	});
var _styled_components$elm_styled$Internal$isDeclaration = function (rule) {
	var _p3 = rule;
	if (_p3.ctor === 'Declaration') {
		return true;
	} else {
		return false;
	}
};
var _styled_components$elm_styled$Internal$createCss = F2(
	function (selector, rules) {
		var _p4 = A2(_elm_lang$core$List$partition, _styled_components$elm_styled$Internal$isDeclaration, rules);
		var declarations = _p4._0;
		var otherRules = _p4._1;
		var declarationsCss = function (css) {
			return A2(
				_elm_lang$core$Basics_ops['++'],
				selector,
				A2(
					_elm_lang$core$Basics_ops['++'],
					' { ',
					A2(_elm_lang$core$Basics_ops['++'], css, ' } ')));
		}(
			A2(
				_elm_lang$core$String$join,
				'  ',
				A2(_elm_lang$core$List$map, _styled_components$elm_styled$Internal$concatDeclaration, declarations)));
		var otherRulesCss = A2(
			_elm_lang$core$List$concatMap,
			_styled_components$elm_styled$Internal$concatOtherRule(selector),
			otherRules);
		return {ctor: '::', _0: declarationsCss, _1: otherRulesCss};
	});
var _styled_components$elm_styled$Internal$concatOtherRule = F2(
	function (parentSelector, rule) {
		var _p5 = rule;
		switch (_p5.ctor) {
			case 'Declaration':
				return _elm_lang$core$List$singleton('');
			case 'Selector':
				return _elm_lang$core$List$singleton(
					A2(
						_elm_lang$core$String$join,
						' ',
						A2(
							_styled_components$elm_styled$Internal$createCss,
							A2(_elm_lang$core$Basics_ops['++'], parentSelector, _p5._0),
							_p5._1)));
			case 'Media':
				return _elm_lang$core$List$singleton(
					function (css) {
						return A2(
							_elm_lang$core$Basics_ops['++'],
							'@media ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_p5._0,
								A2(
									_elm_lang$core$Basics_ops['++'],
									' { ',
									A2(_elm_lang$core$Basics_ops['++'], css, ' } '))));
					}(
						A2(
							_elm_lang$core$String$join,
							' ',
							A2(_styled_components$elm_styled$Internal$createCss, parentSelector, _p5._1))));
			default:
				return A2(_styled_components$elm_styled$Internal$createCss, parentSelector, _p5._0);
		}
	});
