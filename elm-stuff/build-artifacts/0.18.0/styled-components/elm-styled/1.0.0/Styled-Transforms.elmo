var _styled_components$elm_styled$Styled_Transforms$createTransformFunction = function (value) {
	return {value: value, transformFunction: _styled_components$elm_styled$Styled_Types$Compatible};
};
var _styled_components$elm_styled$Styled_Transforms$matrix = F6(
	function (a, b, c, d, tx, ty) {
		var values = A2(
			_elm_lang$core$String$join,
			', ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Basics$toString,
				{
					ctor: '::',
					_0: a,
					_1: {
						ctor: '::',
						_0: b,
						_1: {
							ctor: '::',
							_0: c,
							_1: {
								ctor: '::',
								_0: d,
								_1: {
									ctor: '::',
									_0: tx,
									_1: {
										ctor: '::',
										_0: ty,
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}));
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'matrix(',
				A2(_elm_lang$core$Basics_ops['++'], values, ')')));
	});
var _styled_components$elm_styled$Styled_Transforms$matrix3d = function (a1) {
	return function (b1) {
		return function (c1) {
			return function (d1) {
				return function (a2) {
					return function (b2) {
						return function (c2) {
							return function (d2) {
								return function (a3) {
									return function (b3) {
										return function (c3) {
											return function (d3) {
												return function (a4) {
													return function (b4) {
														return function (c4) {
															return function (d4) {
																var values = A2(
																	_elm_lang$core$String$join,
																	', ',
																	A2(
																		_elm_lang$core$List$map,
																		_elm_lang$core$Basics$toString,
																		{
																			ctor: '::',
																			_0: a1,
																			_1: {
																				ctor: '::',
																				_0: b1,
																				_1: {
																					ctor: '::',
																					_0: c1,
																					_1: {
																						ctor: '::',
																						_0: d1,
																						_1: {
																							ctor: '::',
																							_0: a2,
																							_1: {
																								ctor: '::',
																								_0: b2,
																								_1: {
																									ctor: '::',
																									_0: c2,
																									_1: {
																										ctor: '::',
																										_0: d2,
																										_1: {
																											ctor: '::',
																											_0: a3,
																											_1: {
																												ctor: '::',
																												_0: b3,
																												_1: {
																													ctor: '::',
																													_0: c3,
																													_1: {
																														ctor: '::',
																														_0: d3,
																														_1: {
																															ctor: '::',
																															_0: a4,
																															_1: {
																																ctor: '::',
																																_0: b4,
																																_1: {
																																	ctor: '::',
																																	_0: c4,
																																	_1: {
																																		ctor: '::',
																																		_0: d4,
																																		_1: {ctor: '[]'}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}));
																return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
																	A2(
																		_elm_lang$core$Basics_ops['++'],
																		'matrix3d(',
																		A2(_elm_lang$core$Basics_ops['++'], values, ')')));
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _styled_components$elm_styled$Styled_Transforms$perspective = function (length) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'perspective(',
			A2(_elm_lang$core$Basics_ops['++'], length.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$rotate = function (angle) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'rotate(',
			A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$rotate3d = F4(
	function (x, y, z, angle) {
		var values = A2(
			_elm_lang$core$String$join,
			', ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Basics$toString,
				{
					ctor: '::',
					_0: x,
					_1: {
						ctor: '::',
						_0: y,
						_1: {
							ctor: '::',
							_0: z,
							_1: {ctor: '[]'}
						}
					}
				}));
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'rotate3d(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					values,
					A2(
						_elm_lang$core$Basics_ops['++'],
						', ',
						A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')))));
	});
var _styled_components$elm_styled$Styled_Transforms$rotateX = function (angle) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'rotateX(',
			A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$rotateY = function (angle) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'rotateY(',
			A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$rotateZ = function (angle) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'rotateZ(',
			A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$scale = function (sx) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'scale(',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(sx),
				')')));
};
var _styled_components$elm_styled$Styled_Transforms$scale2 = F2(
	function (sx, sy) {
		var values = A2(
			_elm_lang$core$String$join,
			', ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Basics$toString,
				{
					ctor: '::',
					_0: sx,
					_1: {
						ctor: '::',
						_0: sy,
						_1: {ctor: '[]'}
					}
				}));
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'scale(',
				A2(_elm_lang$core$Basics_ops['++'], values, ')')));
	});
var _styled_components$elm_styled$Styled_Transforms$scale3d = F3(
	function (sx, sy, sz) {
		var values = A2(
			_elm_lang$core$String$join,
			', ',
			A2(
				_elm_lang$core$List$map,
				_elm_lang$core$Basics$toString,
				{
					ctor: '::',
					_0: sx,
					_1: {
						ctor: '::',
						_0: sy,
						_1: {
							ctor: '::',
							_0: sz,
							_1: {ctor: '[]'}
						}
					}
				}));
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'scale3d(',
				A2(_elm_lang$core$Basics_ops['++'], values, ')')));
	});
var _styled_components$elm_styled$Styled_Transforms$scaleX = function (scale) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'scaleX(',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(scale),
				')')));
};
var _styled_components$elm_styled$Styled_Transforms$scaleY = function (scale) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'scaleY(',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(scale),
				')')));
};
var _styled_components$elm_styled$Styled_Transforms$scaleZ = function (scale) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'scaleZ(',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(scale),
				')')));
};
var _styled_components$elm_styled$Styled_Transforms$skew = function (ax) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'skew(',
			A2(_elm_lang$core$Basics_ops['++'], ax.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$skew2 = F2(
	function (ax, ay) {
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'skew(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					ax.value,
					A2(
						_elm_lang$core$Basics_ops['++'],
						', ',
						A2(_elm_lang$core$Basics_ops['++'], ay.value, ')')))));
	});
var _styled_components$elm_styled$Styled_Transforms$skewX = function (angle) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'skewX(',
			A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$skewY = function (angle) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'skewY(',
			A2(_elm_lang$core$Basics_ops['++'], angle.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$translate = function (tx) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'translate(',
			A2(_elm_lang$core$Basics_ops['++'], tx.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$translate2 = F2(
	function (tx, ty) {
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'translate(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					tx.value,
					A2(
						_elm_lang$core$Basics_ops['++'],
						',',
						A2(_elm_lang$core$Basics_ops['++'], ty.value, ')')))));
	});
var _styled_components$elm_styled$Styled_Transforms$translate3d = F3(
	function (tx, ty, tz) {
		return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'tanslate3d(',
				A2(
					_elm_lang$core$Basics_ops['++'],
					tx.value,
					A2(
						_elm_lang$core$Basics_ops['++'],
						', ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							ty.value,
							A2(
								_elm_lang$core$Basics_ops['++'],
								', ',
								A2(_elm_lang$core$Basics_ops['++'], tz.value, ')')))))));
	});
var _styled_components$elm_styled$Styled_Transforms$translateX = function (length) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'translateX(',
			A2(_elm_lang$core$Basics_ops['++'], length.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$translateY = function (length) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'translateY(',
			A2(_elm_lang$core$Basics_ops['++'], length.value, ')')));
};
var _styled_components$elm_styled$Styled_Transforms$translateZ = function (length) {
	return _styled_components$elm_styled$Styled_Transforms$createTransformFunction(
		A2(
			_elm_lang$core$Basics_ops['++'],
			'translateZ(',
			A2(_elm_lang$core$Basics_ops['++'], length.value, ')')));
};
